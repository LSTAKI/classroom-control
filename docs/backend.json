{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the application (teacher, student, parent, admin).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "name": {
          "type": "string",
          "description": "The user's full name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "role": {
          "type": "string",
          "description": "The user's role (teacher, student, parent, admin)."
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "role"
      ]
    },
    "Class": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Class",
      "type": "object",
      "description": "Represents a class managed by a teacher.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the class."
        },
        "teacherId": {
          "type": "string",
          "description": "Reference to the Teacher. (Relationship: Teacher 1:N Class)"
        },
        "studentIds": {
          "type": "array",
          "description": "References to the Students. (Relationship: Class 1:N Student)",
          "items": {
            "type": "string"
          }
        },
        "avgAttendance": {
          "type": "number",
          "description": "The average attendance rate for the class."
        },
        "avgMarks": {
          "type": "number",
          "description": "The average marks for the class."
        },
        "homeworkCompletionRate": {
          "type": "number",
          "description": "The homework completion rate for the class."
        }
      },
      "required": [
        "id",
        "teacherId",
        "studentIds",
        "avgAttendance",
        "avgMarks",
        "homeworkCompletionRate"
      ]
    },
    "Complaint": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Complaint",
      "type": "object",
      "description": "Represents a complaint filed by a teacher about a student.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the complaint."
        },
        "studentId": {
          "type": "string",
          "description": "Reference to the Student. (Relationship: Student 1:N Complaint)"
        },
        "teacherId": {
          "type": "string",
          "description": "Reference to the Teacher. (Relationship: Teacher 1:N Complaint)"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the complaint."
        },
        "date": {
          "type": "string",
          "description": "The date the complaint was filed.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "The status of the complaint (e.g., filed, withdrawn)."
        }
      },
      "required": [
        "id",
        "studentId",
        "teacherId",
        "reason",
        "date",
        "status"
      ]
    },
    "Homework": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Homework",
      "type": "object",
      "description": "Represents a homework assignment given to students.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the homework assignment."
        },
        "title": {
          "type": "string",
          "description": "The title of the homework assignment."
        },
        "description": {
          "type": "string",
          "description": "A description of the homework assignment."
        },
        "dueDate": {
          "type": "string",
          "description": "The due date for the homework assignment.",
          "format": "date-time"
        },
        "attachments": {
          "type": "array",
          "description": "URLs for attached files related to the assignment.",
          "items": {
            "type": "string"
          }
        },
        "assignedBy": {
          "type": "string",
          "description": "Reference to the Teacher who assigned the homework. (Relationship: Teacher 1:N Homework)"
        },
        "assignedTo": {
          "type": "string",
          "description": "Reference to the Class the homework was assigned to. (Relationship: Class 1:N Homework)"
        },
        "status": {
          "type": "string",
          "description": "The status of the homework assignment (e.g., pending, checked)."
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "dueDate",
        "attachments",
        "assignedBy",
        "assignedTo",
        "status"
      ]
    },
    "HomeworkSubmission": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "HomeworkSubmission",
      "type": "object",
      "description": "Represents a student's submission for a homework assignment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the homework submission."
        },
        "homeworkId": {
          "type": "string",
          "description": "Reference to the Homework. (Relationship: Homework 1:N HomeworkSubmission)"
        },
        "studentId": {
          "type": "string",
          "description": "Reference to the Student. (Relationship: Student 1:N HomeworkSubmission)"
        },
        "submissionDate": {
          "type": "string",
          "description": "The date the homework was submitted.",
          "format": "date-time"
        },
        "files": {
          "type": "array",
          "description": "URLs of the files submitted for the homework.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "homeworkId",
        "studentId",
        "submissionDate",
        "files"
      ]
    },
    "Ranking": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Ranking",
      "type": "object",
      "description": "Represents a student's ranking based on performance metrics.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the ranking."
        },
        "studentId": {
          "type": "string",
          "description": "Reference to the Student. (Relationship: Student 1:N Ranking)"
        },
        "homeworkCompletion": {
          "type": "number",
          "description": "The student's homework completion score (50%)."
        },
        "complaintsScore": {
          "type": "number",
          "description": "The student's score based on complaints (-30%)."
        },
        "activityScore": {
          "type": "number",
          "description": "The student's activity score (20%)."
        },
        "totalScore": {
          "type": "number",
          "description": "The student's total score."
        }
      },
      "required": [
        "id",
        "studentId",
        "homeworkCompletion",
        "complaintsScore",
        "activityScore",
        "totalScore"
      ]
    },
    "CalendarEvent": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CalendarEvent",
      "type": "object",
      "description": "Represents an event in the calendar.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the calendar event."
        },
        "type": {
          "type": "string",
          "description": "The type of event (homework, event, holiday)."
        },
        "title": {
          "type": "string",
          "description": "The title of the event."
        },
        "date": {
          "type": "string",
          "description": "The date of the event.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "A description of the event."
        },
        "classId": {
          "type": "string",
          "description": "Reference to the Class the event belongs to. (Relationship: Class 1:N CalendarEvent)"
        }
      },
      "required": [
        "id",
        "type",
        "title",
        "date",
        "description",
        "classId"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Access is restricted to the user themselves and admins.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/classes/{classId}",
        "definition": {
          "entityName": "Class",
          "schema": {
            "$ref": "#/backend/entities/Class"
          },
          "description": "Stores class information. Teachers can read and update classes they manage.",
          "params": [
            {
              "name": "classId",
              "description": "The unique identifier of the class."
            }
          ]
        }
      },
      {
        "path": "/complaints/{complaintId}",
        "definition": {
          "entityName": "Complaint",
          "schema": {
            "$ref": "#/backend/entities/Complaint"
          },
          "description": "Stores complaints filed by teachers. Teachers can only manage complaints they created. Admins have full access.",
          "params": [
            {
              "name": "complaintId",
              "description": "The unique identifier of the complaint."
            }
          ]
        }
      },
      {
        "path": "/homeworks/{homeworkId}",
        "definition": {
          "entityName": "Homework",
          "schema": {
            "$ref": "#/backend/entities/Homework"
          },
          "description": "Stores homework assignments. Teachers can create and manage homework assigned to their classes.",
          "params": [
            {
              "name": "homeworkId",
              "description": "The unique identifier of the homework assignment."
            }
          ]
        }
      },
      {
        "path": "/homeworks/{homeworkId}/submissions/{submissionId}",
        "definition": {
          "entityName": "HomeworkSubmission",
          "schema": {
            "$ref": "#/backend/entities/HomeworkSubmission"
          },
          "description": "Stores homework submissions. Includes denormalized 'studentId' and 'teacherId' from the parent 'homework' document for authorization independence. Students can only create/update their own submissions. Teachers can read all submissions for their homework.",
          "params": [
            {
              "name": "homeworkId",
              "description": "The unique identifier of the homework assignment."
            },
            {
              "name": "submissionId",
              "description": "The unique identifier of the homework submission."
            }
          ]
        }
      },
      {
        "path": "/rankings/{rankingId}",
        "definition": {
          "entityName": "Ranking",
          "schema": {
            "$ref": "#/backend/entities/Ranking"
          },
          "description": "Stores student rankings.  Admins have full access.",
          "params": [
            {
              "name": "rankingId",
              "description": "The unique identifier of the ranking."
            }
          ]
        }
      },
      {
        "path": "/calendar_events/{calendarEventId}",
        "definition": {
          "entityName": "CalendarEvent",
          "schema": {
            "$ref": "#/backend/entities/CalendarEvent"
          },
          "description": "Stores calendar events. Teachers can create and manage events for their classes. Admins have full access.",
          "params": [
            {
              "name": "calendarEventId",
              "description": "The unique identifier of the calendar event."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to address the 'Missing or insufficient permissions' error by ensuring authorization independence and proper data segregation. The error occurred when listing submissions for a specific homework, indicating a permissions issue. The structure implements the following strategies:\n\n1.  **Authorization Independence:** The `homeworkSubmissions` subcollection includes the `studentId`, and `teacherId` denormalized from the parent `homework` document and user profile, enabling rules to validate access based on the requesting user's ID without needing to perform `get()` operations. This addresses the core principle of avoiding hierarchical authorization dependencies.\n2.  **Structural Segregation:** Data with different access needs are kept in separate collections. For instance, user profiles are stored in `/users/{userId}`, ensuring that access to user data is restricted to the user themselves or authorized admins.\n3.  **Access Modeling:** Path-based ownership is used for private data like user profiles (`/users/{userId}`). Membership maps (though not explicitly used in all collections) are considered for collaborative data if the requirements evolve.\n\nThis structure directly supports secure `list` operations (QAPs) because rules can be written to validate the existence of a user and their role without filtering data based on content."
  }
}